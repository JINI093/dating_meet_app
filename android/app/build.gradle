import java.util.Properties
import java.io.FileInputStream

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'dev.flutter.flutter-gradle-plugin'
    // id 'com.google.gms.google-services' // Removed Firebase dependency
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.example.dating_meet_app"
    compileSdk 35

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.example.dating_meet_app"
        minSdkVersion 24 // Amplify 라이브러리 요구사항
        targetSdkVersion 31 // 더 안정적인 타겟 SDK 버전 (Android 12)
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true // AWS SDK 호환을 위해 추가
    }

    signingConfigs {
        debug {
            // 기본 디버그 서명 사용
        }
        release {
            // 임시 디버그 서명 사용 (테스트용)
            // 실제 배포시에는 별도 키스토어 필요
            storeFile file('../debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.4'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    // Firebase 임시 비활성화
    // implementation platform('com.google.firebase:firebase-bom:32.7.0')
    // implementation 'com.google.firebase:firebase-analytics'
    // implementation 'com.google.firebase:firebase-auth'
    // (필요시) implementation 'com.google.firebase:firebase-messaging'
    // (필요시) implementation 'com.google.firebase:firebase-crashlytics'
    // implementation "com.kakao.sdk:v2-user:2.19.0" // 카카오 SDK - 임시 비활성화
}

// 권한 관련 안내 (AndroidManifest.xml에 추가 필요)
// <uses-permission android:name="android.permission.INTERNET" />
// <uses-permission android:name="android.permission.CAMERA" />
// <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
// <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
// <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
// <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
